name: solar system workflow

on:
    push:
        branches:
            -  main
            - 'Feature/*'
env: 
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: 'superuser'
    MONGO_PASSWORD: 'SuperPassword'
jobs:
    unit-testing:
        name: unit Testing
        strategy:
            matrix:
                nodejs_version: [18,19,20]
                operating_system: [ubuntu-latest,macos-latest]

                exclude:
                    - nodejs_version: 20
                      operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
            - name: checkout repository
              uses: actions/checkout@v4

            - name: setup NodeJs Version - ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_version }}
            
            - name: install depend.
              run: npm install
              
            - name: Unit testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: archive test result
              if: steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success'
              uses: actions/upload-artifact@v3
              with:
                name: mocha-test-result
                path: test-results.xml
    Code-coverage:
        name: code coverage 
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v4

            - name: setup nodejs version 18
              uses: actions/setup-node@v3
              with:
                node-version: 18
            
            - name: install depend.
              run: npm install

            - name: check code coverage 
              continue-on-error: true
              run: npm run coverage 

            - name: Archive test Result
              uses: actions/upload-artifact@v3
              with:
                name: code-coverage-result
                path: coverage
                retention-days: 5
    
    docker:
        name: containerization
        runs-on: ubuntu-latest
        
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: docker hub login
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
  
  
            - name: Docker image Test
              run: |
                   docker images
                   docker run --name solar-system-app -d \
                         -p 3000:3000 \
                         -e MONGO_URI=$MONGO_URI \
                         -e MONGO_USERNAME=$MONGO_USERNAME \
                         -e MONGO_PASSWORD=$MONGO_PASSWORD \
                         ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                   export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                   echo $IP
      
                   echo Testing Image URL using wget
                   wget -q -O - 127.0.0.1:3000/live | grep live
      
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                context: .
                push: false
                tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}





